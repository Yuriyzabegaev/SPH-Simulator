(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&e(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(i){if(i.ep)return;i.ep=!0;const a=s(i);fetch(i.href,a)}})();function l(n){const t=document.getElementById(n.sliderName),s=document.getElementById(`${n.sliderName}Value`);n.setterMethod(n.defaultVal),s.textContent=Number(n.defaultVal).toFixed(2),t.value=100/(n.maxVal-n.minVal)*(n.defaultVal-n.minVal),t.addEventListener("input",()=>{const e=n.minVal+(n.maxVal-n.minVal)/100*t.value;s.textContent=Number(e).toFixed(2),n.setterMethod(e)})}class c{constructor(t){this.sim=t,this.canvas=document.getElementById("simulationCanvas"),this.ctx=this.canvas.getContext("2d"),this.domain_limits=t.get_domain_limits(),this.target_dt=1/60,l({sliderName:"viscositySlider",minVal:0,maxVal:10,defaultVal:.1,setterMethod:e=>this.sim.set_viscosity(e)}),l({sliderName:"gravitySlider",minVal:0,maxVal:20,defaultVal:10,setterMethod:e=>this.sim.set_gravity(e)}),l({sliderName:"specificVolumeSlider",minVal:1e6,maxVal:5e6,defaultVal:2e6,setterMethod:e=>this.sim.set_specific_volume(e)}),l({sliderName:"targetDensitySlider",minVal:200,maxVal:2e3,defaultVal:1e3,setterMethod:e=>this.sim.set_target_density(e)}),this.densityMin=500,this.densityMax=2e3,this.newParticlesDensity=1e3,l({sliderName:"densitySlider",minVal:this.densityMin,maxVal:this.densityMax,defaultVal:this.newParticlesDensity,setterMethod:e=>{this.newParticlesDensity=e}});const s=document.getElementById("mouseInteractionSelector");this.mouseInteractionSelectorState=s.value,s.addEventListener("change",()=>{this.mouseInteractionSelectorState=s.value}),this.numberOfParticlesElement=document.getElementById("numberOfParticlesValue"),this.numberOfParticlesElement.textContent=this.sim.get_particles().size(),this.isDragging=!1,this.simDragRadius=.2*this.domain_limits.y,this.lastX=0,this.lastY=0,this.dragButton=0,this.canvas.addEventListener("mousedown",e=>{this.isDragging=!0,[this.lastX,this.lastY]=[e.offsetX,e.offsetY],this.dragButton=e.button}),this.canvas.addEventListener("mousemove",e=>{this.isDragging&&([this.lastX,this.lastY]=[e.offsetX,e.offsetY])}),this.canvas.addEventListener("mouseup",()=>{this.isDragging=!1}),this.canvas.addEventListener("mouseleave",()=>{this.isDragging=!1})}width=()=>this.canvas.width;height=()=>this.canvas.height;applyCentralForce=()=>{const t=this.dragButton===0?40:-40,s=this.coordinatesScreenToSim({z:0,y:this.lastY,x:this.lastX});this.sim.apply_central_force(s,t,this.simDragRadius)};addOrRemoveParticle=()=>{const t=this.coordinatesScreenToSim({z:0,y:this.lastY,x:this.lastX});this.dragButton===0?this.sim.add_particle(t,this.newParticlesDensity):this.sim.remove_particle_at(t),this.numberOfParticlesElement.textContent=this.sim.get_particles().size()};coordinatesSimToScreen=t=>({z:0,y:(this.domain_limits.y-t.y)*this.height()/this.domain_limits.y,x:t.x*this.width()/this.domain_limits.x});coordinatesScreenToSim=t=>({z:this.domain_limits.z/2,y:(1-t.y/this.height())*this.domain_limits.y,x:t.x/this.width()*this.domain_limits.x});update=()=>(this.sim.update(this.target_dt),this.sim.get_particles());setupDotCache=(t,s,e,i=4)=>{const a=i*2,o=document.createElement("canvas");o.width=o.height=a;const r=o.getContext("2d"),d=r.createRadialGradient(i,i,0,i,i,i);return d.addColorStop(0,`rgba(${t},${s},${e}, 1)`),d.addColorStop(1,`rgba(${t},${s},${e}, 1)`),r.fillStyle=d,r.beginPath(),r.arc(i,i,i,0,2*Math.PI),r.fill(),o};draw=t=>{const s=this.ctx;s.fillStyle="black",s.fillRect(0,0,this.width(),this.height());const e=4,i=this.setupDotCache(255,255,255,e);for(let a=0;a<t.size();a++){const o=t.get(a),r=this.coordinatesSimToScreen(o.position);s.drawImage(i,r.x-e,r.y-e)}};handleInteractions=()=>{if(this.isDragging)switch(this.mouseInteractionSelectorState){case"Force":this.applyCentralForce();break;case"Particles":this.addOrRemoveParticle();break}};loop=()=>{this.handleInteractions();const t=this.update();this.draw(t),requestAnimationFrame(this.loop)}}SimModule().then(n=>{document.getElementById("status").textContent="Module loaded.";const t=n.initialize_simulation();new c(t).loop()});
